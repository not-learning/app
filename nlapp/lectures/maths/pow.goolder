package maths

import (
	"github.com/not-learning/app/frame"
	"github.com/not-learning/app/tracks"

	//"embed"
	"log"
	"strings"
	"encoding/csv"

	"github.com/hajimehoshi/ebiten/v2"
)

type Power struct {
	*frame.Lecture
}

//¬∑√ó
// text|ans
var ex0 = `|`

var ex1 = `|
5¬∑3 = 5+5+5|`

var ex2 = `|
5¬≤ = 5¬∑5|
5¬≥ = 5¬∑5¬∑5|
5‚Å¥ = 5¬∑5¬∑5¬∑5|
5‚Åµ = 5¬∑5¬∑5¬∑5¬∑5|`

var ex3 = `
10¬≤ = |100
10¬≥ = |1000
10‚Å¥ = |10000
10À£ = 1 000 000|
x = |6`

var ex4 = `|
a‚Åø|`

var ex5 = `|
x¬≤¬∑x¬≥|x¬∑x¬∑x¬∑x¬∑x`

var t1 = `
–¢—ã –∫–æ–Ω–µ—á–Ω–æ –∑–Ω–∞–µ—à—å, —á—Ç–æ —É–º–Ω–æ–∂–µ–Ω–∏–µ - —ç—Ç–æ —Å–ª–æ–∂–µ–Ω–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —á–∏—Å–µ–ª.
–ü—è—Ç—å –Ω–∞ —Ç—Ä–∏ - —ç—Ç–æ –ø—è—Ç—å –ø–ª—é—Å –ø—è—Ç—å –ø–ª—é—Å –ø—è—Ç—å.
–¢–∞–∫ –≤–æ—Ç, —Å—Ç–µ–ø–µ–Ω—å - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —É–º–Ω–æ–∂–µ–Ω–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —á–∏—Å–µ–ª.
–ü—è—Ç—å –≤–æ –≤—Ç–æ—Ä–æ–π —ç—Ç–æ –ø—è—Ç—å —É–º–Ω–æ–∂–∏—Ç—å –Ω–∞ –ø—è—Ç—å.
–ü—è—Ç—å –≤ —Ç—Ä–µ—Ç—å–µ–π —ç—Ç–æ –ø—è—Ç—å –Ω–∞ –ø—è—Ç—å –Ω–∞ –ø—è—Ç—å.
–ò —Ç–∞–∫
–¥–∞–ª–µ–µ.
–°–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –¥–µ—Å—è—Ç—å –≤–æ –≤—Ç–æ—Ä–æ–π?
–ê –≤ —Ç—Ä–µ—Ç—å–µ–π?
–í —á–µ—Ç–≤–µ—Ä—Ç–æ–π?
–í –∫–∞–∫—É—é —Å—Ç–µ–ø–µ–Ω—å –Ω–∞–¥–æ –≤–æ–∑–≤–µ—Å—Ç–∏ –¥–µ—Å—è—Ç—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∏–ª–ª–∏–æ–Ω?
–í –∫–∞–∫—É—é —Å—Ç–µ–ø–µ–Ω—å –Ω–∞–¥–æ –≤–æ–∑–≤–µ—Å—Ç–∏ –¥–µ—Å—è—Ç—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∏–ª–ª–∏–æ–Ω?`

var t2 = `–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ - –∫–∞–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –õ–µ–≥–æ, –∏ —É –Ω–∞—Å –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –∫–∏—Ä–ø–∏—á–∏–∫.
–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —Å –Ω–∏–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.
–í–æ–∑—å–º–µ–º a –≤ —Å—Ç–µ–ø–µ–Ω–∏ n.
–ö—Å—Ç–∞—Ç–∏, —á–∏—Å–ª–æ –≤–Ω–∏–∑—É, a, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å—Ç–µ–ø–µ–Ω–∏,
–∞ —á–∏—Å–ª–æ –≤–≤–µ—Ä—Ö—É, n - –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å.
–ü–æ–ø—Ä–æ–±—É–µ–º —É–º–Ω–æ–∂–∏—Ç—å –¥–≤–µ —Å—Ç–µ–ø–µ–Ω–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –æ—Å–Ω–æ–≤–∞–Ω–∏—è–º–∏,
—Å–∫–∞–∂–µ–º x –≤–æ –≤—Ç–æ—Ä–æ–π –∏ x –≤ —Ç—Ä–µ—Ç—å–µ–π. –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è?`

func rCsv(text string) [][]string {
	r := csv.NewReader(strings.NewReader(text))
	r.Comma = '|'
	recs, err := r.ReadAll()
	if err != nil { log.Fatal(err) }
	return recs
}

func InitPow(x1, y1, x2, y2 float32) *Power {
	p := &Power{}
	p.Lecture = frame.Init(x1, y1, x2, y2)

	p.Lecture.ExInit(
		rCsv(ex0),
		rCsv(ex1),
		rCsv(ex2),
		rCsv(ex3),
		rCsv(ex4),
		rCsv(ex5),
	)
	p.Lecture.ScriptInit(t1, t2)

	p.Lecture.Tracks = tracks.Init()

	return p
}

func (p *Power) Draw(scr *ebiten.Image) {
	p.Lecture.Draw(scr)
}

func (p *Power) Update() {
	p.Lecture.Update()
}

/*
hi there
À£
‚Å∞¬π¬≤¬≥‚Å¥‚Åµ‚Å∂‚Å∑‚Å∏‚Åπ
‚Å∫‚Åª‚Åº‚ÅΩ‚Åæ‚Åø
ùüù
‚Öï
5√ó5√ó5
*/
